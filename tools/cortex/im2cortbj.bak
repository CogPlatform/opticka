function retval = im2cortbj (m, map, filename, offset,lutwrite)
%Function takes an indexed matlab image matrix m, and 
%colormap map, and writes a cortex image with lookup table values
%starting at offset. lutwrite ==1 if a LUT should be written, ==0
%if no lut is needed. 
%Written G. Bertini
%Modified B. Jagadeesh 7/2/98 to add a check for whether LUT should
%be written. 

%Check for indexing
if ~isind(m)
   error ('Image must be idexed');
end

%Get size of image and set some values for CTX image files
[Xsize Ysize] = size (m);
[values channels] = size (map);
header  = '000000000000';
ammappa = 0;  % What is this value?

%Check if there are more than 128 LUT values. 
if values > 128
   warning ('are you sure you want more than 128 lut values?');
end
if channels ~= 3
   error ('invalid lut');
end

%Start writing image
[f, msg] = fopen ([filename, '.ctx'], 'w');
if f == -1
   error (msg);
end

moff = double(m') + offset;

if ~isempty (find (moff<128)) or ~isempty (find(moff>255))
   error ('something wrong with the lut values');
end

fwrite (f, header);
fwrite (f, Xsize,  'ushort');
fwrite (f, Ysize,  'ushort');
fwrite (f, ammappa,'ushort');
fwrite (f, moff,   'uchar');
fclose (f);

%Check if LUT should be written for image (not necessary if common lut
%or old LUT will be used.
if lutwrite==1
	[f, msg] = fopen ([filename, '.lut'], 'w');
	if f == -1
   	error (msg);
	end

	mapi = round (map * 255);
	mapi (values, 4)=0;
	for i=1:values
   	fwrite (f, mapi (i,:), 'ushort');
	end

	fclose (f);
end

retval = 1;